---
import WidgetLayout from './WidgetLayout.astro'
import type { MarkdownHeading } from 'astro';

import { i18n } from '../../i18n/translation'
import I18nKey from '../../i18n/i18nKey'
import ButtonLink from '../control/ButtonLink.astro'

interface Props {
  class?: string
  style?: string
  headings: MarkdownHeading[]
}

const { headings  } = Astro.props;

const className = Astro.props.class
const style = Astro.props.style

const COLLAPSED_HEIGHT = '7.5rem'
const COLLAPSE_THRESHOLD = 5

const isCollapsed = headings.length >= COLLAPSE_THRESHOLD

const getPaddingClassFromHeading = (heading: MarkdownHeading) => {
    return `ml-${heading.depth}`;
}

const removeTailingHash = (text: string) => {
    let lastIndexOfHash = text.lastIndexOf('#');
    if (lastIndexOfHash != text.length - 1) {
        return text;
    }

    return text.substring(0, lastIndexOfHash);
}

---

<WidgetLayout name={i18n(I18nKey.toc)} id="toc" isCollapsed={isCollapsed} collapsedHeight={COLLAPSED_HEIGHT}
                class={className} style={style}
                >
    {headings.map((heading) =>
        <div class={getPaddingClassFromHeading(heading)}>
            <ButtonLink url={`#${heading.slug}`}>{removeTailingHash(heading.text)}</ButtonLink>
        </div>
    )}
</WidgetLayout>